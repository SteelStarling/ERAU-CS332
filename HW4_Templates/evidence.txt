Script started on Wed 08 Mar 2023 04:49:39 PM MST
[?1034hsh-4.2$ cat -n TBuffer.hpp
     1	
     2	//
     3	// Created by Taylor Hancock on 03/07/23.
     4	//
     5	
     6	#ifndef HW4_TEMPLATES_TBUFFER_HPP
     7	#define HW4_TEMPLATES_TBUFFER_HPP
     8	
     9	#include <iostream>
    10	#include <iomanip>
    11	
    12	template<typename T, int N>
    13	class TBuffer {
    14	protected:
    15	    T data[N];
    16	    int capacity;
    17	    int dataLength;
    18	    T zeroValue;
    19	public:
    20	    TBuffer(T zeroValue) : capacity(N), dataLength(0), zeroValue(zeroValue) {};
    21	    virtual int add(T value);
    22	    int add(const T array[], int length);
    23	    T sum();
    24	    void print(int col_width, int row_width) const;
    25	};
    26	
    27	template<class T, int N>
    28	int TBuffer<T, N>::add(T value) {
    29	    if (dataLength < capacity) {
    30	        data[dataLength] = value;
    31	        ++dataLength;
    32	        return 1;
    33	    }
    34	    else
    35	        return 0;
    36	}
    37	
    38	template<class T, int N>
    39	int TBuffer<T, N>::add(const T array[], int length) {
    40	    int count = 0;
    41	    for (int i = 0; i < length; ++i)
    42	        count += add(array[i]);
    43	    return count;
    44	}
    45	
    46	template<class T, int N>
    47	T TBuffer<T, N>::sum() {
    48	    T sum = zeroValue;
    49	    for(int i = 0; i < dataLength; i++) {
    50	        sum += data[i];
    51	    }
    52	    return sum;
    53	}
    54	
    55	template<class T, int N>
    56	void TBuffer<T, N>::print(int col_width, int row_width) const {
    57	    for (int i = 0; i < dataLength; ++i) {
    58	        // check if value should start a new row
    59	        if (i % row_width == 0 && i > 0)
    60	            std::cout << '\n';
    61	        std::cout << std::setw(col_width) << data[i];
    62	    }
    63	    std::cout << std::endl;
    64	}
    65	
    66	#endif //HW4_TEMPLATES_TBUFFER_HPP
sh-4.2$ g++ -std=c++11 hw4.cpp TBuffer.hpp
sh-4.2$ a.out
    7   12   -4    6    8    6    5   -4   -6
  Sum: 30

  8.463   3.74  5.231   3.74
  Sum: 21.174

    Turing    Kleene    Church   Russell     Hoare  McCarthy   Chomsky
     Frege     Jaffe
  Sum: TuringKleeneChurchRussellHoareMcCarthyChomskyFregeJaffe
sh-4.2$ cat -n TOrderedBuffer.hpp
     1	
     2	//
     3	// Created by Taylor Hancock on 03/07/23.
     4	//
     5	
     6	#ifndef HW4_TEMPLATES_TORDEREDBUFFER_HPP
     7	#define HW4_TEMPLATES_TORDEREDBUFFER_HPP
     8	
     9	#include "TBuffer.hpp"
    10	
    11	template<typename T, int N>
    12	class TOrderedBuffer : public TBuffer<T, N> {
    13	public:
    14	    TOrderedBuffer(T zeroValue) : TBuffer<T, N>(zeroValue) {}
    15	    int add(T value) override;
    16	};
    17	
    18	template<typename T, int N>
    19	int TOrderedBuffer<T, N>::add(T value) {
    20	
    21	    if (this->dataLength < this->capacity) {
    22	        int i = 0;
    23	        // shift things up while looking for place to insert
    24	        for (i = this->dataLength; i > 0 && this->data[i - 1] > value; --i)
    25	            this->data[i] = this->data[i - 1];
    26	        this->data[i] = value;
    27	        ++this->dataLength;
    28	        return 1;
    29	    } else
    30	        return 0;
    31	}
    32	
    33	
    34	#endif //HW4_TEMPLATES_TORDEREDBUFFER_HPP
sh-4.2$ g++ -std=c++11 hw4extra.cpp TBuffer.hpp TOrderedBuffer.hpp
sh-4.2$ a.out
int array capacity = 14
         7        12        17        12        -4         6         8
         3         5        17        -6        11
   Sum: 88

int array capacity = 12
        -6        -4         3         5         6         7         8
        11        12        12        17        17
   Sum: 88

int array capacity = 8
        -4         3         6         7         8        12        12
        17
   Sum: 61

string array capacity = 10
     Frege   Russell    Goedel    Turing VonNeuman    Kleene Whitehead
     Hoare   Chomsky
   Sum: FregeRussellGoedelTuringVonNeumanKleeneWhiteheadHoareChomsky

string array capacity = 10
   Chomsky     Frege    Goedel     Hoare    Kleene   Russell    Turing
 VonNeuman Whitehead
   Sum: ChomskyFregeGoedelHoareKleeneRussellTuringVonNeumanWhitehead

double array capacity = 10
     8.463      3.74     5.231
   Sum: 17.434

double array capacity = 10
      3.74     5.231     8.463
   Sum: 17.434

sh-4.2$ exit
exit

Script done on Wed 08 Mar 2023 04:51:21 PM MST
